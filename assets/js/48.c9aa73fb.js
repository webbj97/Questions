(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{860:function(n,t,a){"use strict";a.r(t);var s=a(59),e=Object(s.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"剑指-offer-35-复杂链表的复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剑指-offer-35-复杂链表的复制"}},[n._v("#")]),n._v(" 剑指 Offer 35. 复杂链表的复制")]),n._v(" "),a("p",[n._v("请实现 copyRandomList 函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个 next 指针指向下一个节点，还有一个 random 指针指向链表中的任意节点或者 null。")]),n._v(" "),a("p",[a("strong",[n._v("示例 1：")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("输入：head = [[7,null],[13,0],[11,4],[10,2],[1,0]]\n输出：[[7,null],[13,0],[11,4],[10,2],[1,0]]\n")])])]),a("p",[a("strong",[n._v("示例 2：")])]),n._v(" "),a("p",[n._v("输入：head = [[3,null],[3,0],[3,null]]\n输出：[[3,null],[3,0],[3,null]]")]),n._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n * // Definition for a Node.\n * function Node(val, next, random) {\n *    this.val = val;\n *    this.next = next;\n *    this.random = random;\n * };\n */")]),n._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n * @param {Node} head\n * @return {Node}\n */")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("var")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[n._v("copyRandomList")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[n._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n")])])]),n._v(" "),a("comment-comment"),n._v(" "),a("comment-comment")],1)}),[],!1,null,null,null);t.default=e.exports}}]);