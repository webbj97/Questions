(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{926:function(t,e,r){"use strict";r.r(e);var f=r(66),v=Object(f.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),r("p",[t._v("这里记录的经典的算法思想，解题模版和配套的练习题目")]),t._v(" "),r("p",[t._v("优秀的数据结构思想就好比高级的交通工具，可以帮助我们轻易的到达目的地，加油")]),t._v(" "),r("h2",{attrs:{id:"剑指offer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#剑指offer"}},[t._v("#")]),t._v(" 剑指Offer")]),t._v(" "),r("blockquote",[r("p",[t._v("JavaScript版剑指offer全题解")])]),t._v(" "),r("p",[t._v("学会掌握某一道算法题，对我们的提高的不明显的，算法思想的锻炼也不是一朝一夕的，每天刷一道题，坚持住，既可以培养思路，又可以提高自信，加油～")]),t._v(" "),r("p",[t._v("完成的题目会变成跳转链接～")]),t._v(" "),r("h3",{attrs:{id:"数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),r("ol",[r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer03.html"}},[t._v("剑指Offer（03）数组中重复的数字")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer04.html"}},[t._v("剑指Offer（04）二维数组中的查找")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer11.html"}},[t._v("剑指Offer（11）旋转数组的最小数字")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer21.html"}},[t._v("剑指Offer（21）调整数组顺序使奇数位于偶数前面")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer29.html"}},[t._v("剑指Offer（29）顺时针打印矩阵")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer39.html"}},[t._v("剑指Offer（39）数组中出现次数超过一半的数字")])],1),t._v(" "),r("li",[t._v("❌"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer53-1.html"}},[t._v("剑指Offer（53-1）在排序数组中查找数字I")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer53-2.html"}},[t._v("剑指Offer（53-2）0～n-1中缺失的数字")])],1),t._v(" "),r("li",[t._v("剑指Offer（三十）-- 连续子数组的最大和")]),t._v(" "),r("li",[t._v("剑指Offer（三十五）-- 数组中的逆序对")]),t._v(" "),r("li",[t._v("剑指Offer（三十七）-- 数字在升序数组中出现的次数")]),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer56-2.html"}},[t._v("剑指Offer（56-2）数组中数字出现的次数")])],1),t._v(" "),r("li",[t._v("剑指Offer（五十）-- 数组中重复的数字")]),t._v(" "),r("li",[t._v("剑指Offer（五十一）-- 构建乘积数组")])]),t._v(" "),r("h3",{attrs:{id:"字符串"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),r("ol",[r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer05.html"}},[t._v("剑指Offer（05）替换空格")])],1),t._v(" "),r("li",[t._v("❌"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer27.html"}},[t._v("剑指Offer（27）字符串的排序")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer50.html"}},[t._v("剑指Offer（50）第一个只出现一次的字符")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer58.html"}},[t._v("剑指Offer（58）左旋转字符串")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer58-1.html"}},[t._v("剑指Offer（58-1）翻转单词顺序")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer67.html"}},[t._v("剑指Offer（67）把字符串转换成整数")])],1),t._v(" "),r("li",[t._v("剑指Offer（五十三）-- 表示数值的字符串")]),t._v(" "),r("li",[t._v("剑指Offer（五十四）-- 字符流中第一个不重复的字符")]),t._v(" "),r("li",[t._v("剑指Offer（六十四）-- 滑动窗口最大值")])]),t._v(" "),r("h3",{attrs:{id:"链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),r("ol",[r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer06.html"}},[t._v("剑指Offer（06）从尾到头打印链表")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer18.html"}},[t._v("剑指Offer（18）删除链表的节点")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer22.html"}},[t._v("剑指Offer（22）链表中倒数第k个节点")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer24.html"}},[t._v("剑指Offer（24）反转链表")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer25.html"}},[t._v("剑指Offer（25）合并两个拍排序的链表")])],1),t._v(" "),r("li",[t._v("❌"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer35.html"}},[t._v("剑指Offer（35）复杂链表的复制")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer52.html"}},[t._v("剑指Offer（52）两个链表的第一个公共节点")])],1),t._v(" "),r("li",[t._v("剑指Offer（五十五）-- 链表中环的入口节点")]),t._v(" "),r("li",[t._v("剑指Offer（五十六）-- 删除链表中重复的元素")])]),t._v(" "),r("h3",{attrs:{id:"栈和队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈和队列"}},[t._v("#")]),t._v(" 栈和队列")]),t._v(" "),r("ol",[r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer09.html"}},[t._v("剑指Offer（9）用两个栈实现队列")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer30.html"}},[t._v("剑指Offer（30）包含min函数的栈")])],1),t._v(" "),r("li",[t._v("剑指Offer（二十一）-- 栈的压入，弹出序")])]),t._v(" "),r("h3",{attrs:{id:"堆"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#堆"}},[t._v("#")]),t._v(" 堆")]),t._v(" "),r("ol",[r("li",[t._v("剑指Offer（二十九）-- 最小的k个数")])]),t._v(" "),r("h3",{attrs:{id:"双指针"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#双指针"}},[t._v("#")]),t._v(" 双指针")]),t._v(" "),r("ol",{attrs:{start:"9"}},[r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer57.html"}},[t._v("剑指Offer（57）和为s的两个数字")])],1)]),t._v(" "),r("h3",{attrs:{id:"搜索算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#搜索算法"}},[t._v("#")]),t._v(" 搜索算法")]),t._v(" "),r("h3",{attrs:{id:"动态规划"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[t._v("#")]),t._v(" 动态规划")]),t._v(" "),r("ol",[r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer10-1.html"}},[t._v("剑指Offer（10-1）斐波那契数列")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer10-2.html"}},[t._v("剑指Offer（10-2）跳台阶")])],1),t._v(" "),r("li",[t._v("剑指Offer（十）-- 矩形覆盖")]),t._v(" "),r("li",[t._v("剑指Offer（五十二）-- 正则表达式匹配（动态规划）")]),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer63.html"}},[t._v("剑指 Offer 63. 股票的最大利润")])],1)]),t._v(" "),r("h3",{attrs:{id:"回溯"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#回溯"}},[t._v("#")]),t._v(" 回溯")]),t._v(" "),r("ol",[r("li",[t._v("剑指Offer（六十五）-- 矩阵中的路径（经典回溯法）")]),t._v(" "),r("li",[t._v("剑指Offer（六十六）-- 机器人的运动范围")])]),t._v(" "),r("h3",{attrs:{id:"排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),r("ol",[r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer45.html"}},[t._v("剑指Offer（45）把数组排成最小的数")])],1)]),t._v(" "),r("h3",{attrs:{id:"位运算"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#位运算"}},[t._v("#")]),t._v(" 位运算")]),t._v(" "),r("ol",[r("li",[t._v("剑指Offer（十一）-- 二进制中1的个数")]),t._v(" "),r("li",[t._v("剑指Offer（三十一）-- 整数中1出现的次数")]),t._v(" "),r("li",[t._v("剑指Offer（四十八）-- 不使用加减乘除实现加法")])]),t._v(" "),r("h3",{attrs:{id:"二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" 二叉树")]),t._v(" "),r("ol",[r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer07.html"}},[t._v("剑指Offer（07）重建二叉树")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer26.html"}},[t._v("剑指Offer（26）树的子结构")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer27.html"}},[t._v("剑指Offer（27）二叉树的镜像")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer28.html"}},[t._v("剑指Offer（28）对称的二叉树")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer32-1.html"}},[t._v("剑指Offer（32-1）从上往下打印二叉树I")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer32-2.html"}},[t._v("剑指Offer（32-2）从上往下打印二叉树II")])],1),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer32-3.html"}},[t._v("剑指Offer（32-3）从上往下打印二叉树II")])],1),t._v(" "),r("li",[t._v("剑指Offer（二十三）-- 二叉树搜索树的后序遍历序列")]),t._v(" "),r("li",[t._v("剑指Offer（二十四）-- 二叉树中和为某一值的路径")]),t._v(" "),r("li",[t._v("剑指Offer（二十六）-- 二叉搜索树和双向链表")]),t._v(" "),r("li",[t._v("剑指Offer（三十八）-- 树的深度")]),t._v(" "),r("li",[t._v("剑指Offer（三十九）-- 平衡二叉树")]),t._v(" "),r("li",[t._v("剑指Offer（五十七）-- 二叉树的下一个节点")]),t._v(" "),r("li",[t._v("剑指Offer（五十八）-- 对称二叉树")]),t._v(" "),r("li",[t._v("剑指Offer（五十九）-- 按之字形顺序打印二叉树")]),t._v(" "),r("li",[t._v("剑指Offer（六十）-- 将二叉树打印成多行")]),t._v(" "),r("li",[t._v("剑指Offer（六十一）-- 序列化二叉树")]),t._v(" "),r("li",[t._v("剑指Offer（六十二）-- 二叉搜索树的第k个节点")])]),t._v(" "),r("h3",{attrs:{id:"其他算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#其他算法"}},[t._v("#")]),t._v(" 其他算法")]),t._v(" "),r("ol",[r("li",[t._v("剑指Offer（九）--跳台阶变态版")]),t._v(" "),r("li",[t._v("剑指Offer（十二）--数值的整数次方")]),t._v(" "),r("li",[t._v("剑指Offer（三十三）-- 丑数")]),t._v(" "),r("li",[t._v("剑指Offer（四十一）-- 和为S的连续正数序列")]),t._v(" "),r("li",[t._v("剑指Offer（四十二）-- 和为S的两个数字")]),t._v(" "),r("li",[t._v("✅ "),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer61.html"}},[t._v("剑指Offer（61）扑克牌中的顺子")])],1),t._v(" "),r("li",[t._v("剑指Offer（四十六）-- 最后出圈的士兵（约瑟夫）")]),t._v(" "),r("li",[t._v("✅"),r("RouterLink",{attrs:{to:"/algorithm/leetcode/offer64.html"}},[t._v("剑指Offer（64）1+2+...+n的求和（不使用循环或者乘法）")])],1),t._v(" "),r("li",[t._v("剑指Offer（六十七）-- 剪绳子")])])])}),[],!1,null,null,null);e.default=v.exports}}]);