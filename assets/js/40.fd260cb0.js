(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{852:function(t,n,e){"use strict";e.r(n);var a=e(59),s=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"剑指-offer-26-树的子结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#剑指-offer-26-树的子结构"}},[t._v("#")]),t._v(" 剑指 Offer 26. 树的子结构")]),t._v(" "),e("p",[t._v("输入两棵二叉树A和B，判断B是不是A的子结构。(约定空树不是任意一个树的子结构)")]),t._v(" "),e("p",[t._v("B是A的子结构， 即 A中有出现和B相同的结构和节点值。")]),t._v(" "),e("p",[e("strong",[t._v("例如:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("给定的树 A:\n\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n给定的树 B：\n\n   4 \n  /\n 1\n")])])]),e("p",[t._v("返回 true，因为 B 与 A 的一个子树拥有相同的结构和节点值。")]),t._v(" "),e("p",[e("strong",[t._v("示例 1：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("输入：A = [1,2,3], B = [3,1]\n输出：false\n")])])]),e("p",[e("strong",[t._v("示例 2：")]),t._v("\n``\n输入：A = [3,4,5,1,2], B = [4,1]\n输出：true")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n## 题解：\n\n```js\n\n")])])]),t._v(" "),e("comment-comment")],1)}),[],!1,null,null,null);n.default=s.exports}}]);